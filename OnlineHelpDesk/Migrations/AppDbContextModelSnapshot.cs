// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineHelpDesk.Models;

namespace OnlineHelpDesk.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineHelpDesk.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar");

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("RoleId");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("RoleId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("OnlineHelpDesk.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("OnlineHelpDesk.Models.Discussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("date");

                    b.Property<int>("TickerId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("TickerId");

                    b.ToTable("Discussion");
                });

            modelBuilder.Entity("OnlineHelpDesk.Models.Period", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("Period");
                });

            modelBuilder.Entity("OnlineHelpDesk.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("TicketId");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("OnlineHelpDesk.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("OnlineHelpDesk.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Display")
                        .HasColumnName("Display");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("OnlineHelpDesk.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("PeriodId");

                    b.Property<int>("StatusId");

                    b.Property<int?>("SupporterId");

                    b.Property<string>("Tittle");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PeriodId");

                    b.HasIndex("StatusId");

                    b.HasIndex("SupporterId");

                    b.HasIndex("UserId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("OnlineHelpDesk.Models.Account", b =>
                {
                    b.HasOne("OnlineHelpDesk.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("OnlineHelpDesk.Models.Role", "Role")
                        .WithMany("Account")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Account_Role");
                });

            modelBuilder.Entity("OnlineHelpDesk.Models.Discussion", b =>
                {
                    b.HasOne("OnlineHelpDesk.Models.Account", "Account")
                        .WithMany("Discussion")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Discussion_Account");

                    b.HasOne("OnlineHelpDesk.Models.Ticket", "Ticket")
                        .WithMany("Discussion")
                        .HasForeignKey("TickerId")
                        .HasConstraintName("FK_Discussion_Ticket");
                });

            modelBuilder.Entity("OnlineHelpDesk.Models.Photo", b =>
                {
                    b.HasOne("OnlineHelpDesk.Models.Ticket", "Ticket")
                        .WithMany("Photo")
                        .HasForeignKey("TicketId")
                        .HasConstraintName("Fk_Photo_Ticket");
                });

            modelBuilder.Entity("OnlineHelpDesk.Models.Ticket", b =>
                {
                    b.HasOne("OnlineHelpDesk.Models.Category", "Category")
                        .WithMany("Ticket")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Ticket_Category");

                    b.HasOne("OnlineHelpDesk.Models.Period", "Period")
                        .WithMany("Ticket")
                        .HasForeignKey("PeriodId")
                        .HasConstraintName("FK_Ticket_Period");

                    b.HasOne("OnlineHelpDesk.Models.Status", "Status")
                        .WithMany("Ticket")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnlineHelpDesk.Models.Account", "Supporter")
                        .WithMany("TicketSupporter")
                        .HasForeignKey("SupporterId");

                    b.HasOne("OnlineHelpDesk.Models.Account", "User")
                        .WithMany("TicketUser")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
